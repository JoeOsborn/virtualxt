name: CI

on:
  push:
    branches: [ edge, release ]
  pull_request:
    branches: [ edge, release ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  VXT_VERSION: 0.6.2
  SDL2_WINDOWS_VERSION: 2.0.14

jobs:
  linux-build:
    name: Build (Linux AMD64)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Setup
        run: |
          sudo apt-get update
          sudo apt-get install libsdl2-dev libpcap-dev

      - name: Test
        run: |
          export FULL_VERSION=${VXT_VERSION}.${GITHUB_RUN_ID}
          go generate ./...
          go test -race -coverprofile coverage.txt -covermode atomic ./...

      - name: Report
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: bash <(curl -s https://codecov.io/bash)
        
      - name: Build
        run: go build -tags sdl,pcap,static -ldflags "-s -w"

  macos-build:
    name: Build (MacOS AMD64)
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Setup
        run: |
          brew update
          brew install sdl2

      - name: Test
        run: |
          export FULL_VERSION=${VXT_VERSION}.${GITHUB_RUN_ID}
          go generate ./...
          go test -race ./...
        
      - name: Build
        run: go build -tags sdl,pcap,static -ldflags "-s -w"

  windows-build:
    name: Build (Windows AMD64)
    runs-on: windows-latest

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Setup
        run: |
          curl -L -o butler.zip https://broth.itch.ovh/butler/windows-amd64/LATEST/archive/default && unzip butler.zip -d butler
          curl -L -o sdl.zip https://www.libsdl.org/release/SDL2-devel-${SDL2_WINDOWS_VERSION}-VC.zip && unzip sdl.zip
          echo "${GITHUB_WORKSPACE}/butler" >> $GITHUB_PATH

          go get github.com/akavel/rsrc
          echo "${HOME}/go/bin" >> $GITHUB_PATH

      - name: Test
        run: |
          export FULL_VERSION=${VXT_VERSION}.${GITHUB_RUN_ID}
          go generate ./...
          go test -mod mod -race ./...
        
      - name: Build
        run: |
          export C_INCLUDE_PATH=${GITHUB_WORKSPACE}/SDL2-${SDL2_WINDOWS_VERSION}/x86_64-w64-mingw32/include
          export LIBRARY_PATH=${GITHUB_WORKSPACE}/SDL2-${SDL2_WINDOWS_VERSION}/x86_64-w64-mingw32/lib

          rsrc -ico=doc/icon/icon.ico -arch=amd64
          go build -mod mod -tags sdl,pcap,static -ldflags "-s -w"
        
      - name: Package
        run: |
          export FULL_VERSION=${VXT_VERSION}.${GITHUB_RUN_ID}
          ./tools/package/itch/package.bat
        
      - name: Deploy
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
        run: ./tools/package/itch/push.sh
